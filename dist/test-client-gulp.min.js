angular.module("testClientGulp",["ngAnimate","ngSanitize","ngTouch","ngResource","ngMessages","ui.router","ui.bootstrap","angularModalService","smart-table","ui.select"]).constant("DEFAULT_STATE","help").config(["$httpProvider",function(e){"use strict";e.interceptors.push("httpInterceptor")}]).run(["$rootScope","routing","security","ModalService","loader","DEFAULT_STATE","socket",function(e,t,s,o,l,i,a){"use strict";e.$on("$stateChangeStart",function(e,a){if(o.closeAll(),"base.login"!==a.name)if(s.getTicket()){var r=s.getSecurityData().roles;_.isArray(a.roles)&&0===_.intersection(r,a.roles).length?(e.preventDefault(),t.go2State(i)):l.nonInvasiveVisible()}else e.preventDefault(),t.go2State("login")}),e.$on("$stateChangeSuccess",function(){l.nonInvasiveInvisible()}),e.$on("$stateChangeError",function(){l.nonInvasiveInvisible()}),a.init()}]),function(){function e(){try{return new XMLHttpRequest}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}return alert("XMLHttpRequest not supported"),null}function t(){angular.element(document).ready(function(){angular.bootstrap(document,["testClientGulp"])})}var s=e();s.open("GET","/assets/config.json",!0),s.onreadystatechange=function(){if(4==s.readyState){if(200!=s.status)return alert("Error Loading System Configuration"),void 0;$config=angular.fromJson(s.responseText);var o=e();o.open("GET",$config.CAS_URL+"/validate",!0),o.withCredentials=!0,o.onreadystatechange=function(){if(4==o.readyState)switch($security={},o.status){case 200:$security=angular.fromJson(o.responseText),t();break;case 401:$security={session:angular.fromJson(o.responseText).session},t();break;default:alert("Error Communicating with CAS Server. Please check your internet connection and CAS Server status. Also check if this Application is in CAS Server allowed Origins.")}},o.send(null)}},s.send(null)}(),angular.module("testClientGulp").controller("OfficesCtrl",["$scope","OfficeModel","callServer","loader","errorService","ModalService",function(e,t,s,o,l,i){"use strict";var a=this;e.$on("$saved-office",function(e,t,s){if(s){var o=_.findIndex(a.smartTable.rowCollection,function(e){return e.id===t.id});-1!==o&&a.smartTable.rowCollection.splice(o,1,t)}else a.smartTable.rowCollection.splice(0,0,t);t.$isSelected=!0}),a.callServer=_.partial(s,{ctrl:a,Resource:t,qf:"name"}),a.on={newOptsClick:function(){i.showModal({templateUrl:"/views/offices/officeDlg.html",controller:"ModalOfficeCtrl as ModalOffice",inputs:{office:new t}})},editOptsClick:function(e){var s=t.get({id:e.id});o.invasiveVisible(),s.$promise.then(function(){i.showModal({templateUrl:"/views/offices/officeDlg.html",controller:"ModalOfficeCtrl as ModalOffice",inputs:{office:s}})}).finally(function(){o.invasiveInvisible()})},deleteOptsClick:function(e){i.showModal({templateUrl:"/views/modalConfirm.html",controller:"ModalCtrl",inputs:{title:"Are you sure you want to delete office?",buttons:{yes:{type:"primary",text:"Yes"},no:{type:"default",text:"No"}},message:"Once Deleted, you will not be able to recover it."}}).then(function(t){t.close.then(function(t){switch(t){case"yes":o.invasiveVisible(),e.$delete().then(function(){a.smartTable.api.slice(0,a.smartTable.resultsPerPage)}).finally(function(){o.invasiveInvisible()})}})})}}}]),angular.module("testClientGulp").controller("ModalOfficeCtrl",["$scope","$rootScope","office","loader","currentForm","close",function(e,t,s,o,l,i){"use strict";var a=this;a.model=s,a.title=s.id?"Edit Office":"New Office",a.on={close:function(e){i(e)},saveData:function(r){var n=s.id;if(!a.saving&&r)return a.saving=!0,o.invasiveVisible(),l.setFrm(e.officeForm),s.$save().then(function(){t.$broadcast("$saved-office",s,n),i("saved")}).finally(function(){o.invasiveInvisible(),a.saving=!1})}}}]),angular.module("testClientGulp").controller("LoginCtrl",["$scope","loader","$http","security","config","routing","socket","ModalService",function(e,t,s,o,l,i,a,r){"use strict";var n=this;n.model={},n.on={doLogin:function(e){return!n.saving&&e?(n.saving=!0,t.invasiveVisible(),s.post(l.CAS_URL+"/login",_.extend({ajaxCall:"1"},n.model)).then(function(e){return a.emit("login"),o.setSecurityData(e.data),i.go2State("help")}).catch(function(e){switch(n.model.password="",e.status){case 400:r.showModal({templateUrl:"/views/modalError.html",controller:"ModalCtrl",inputs:{title:"Invalid Credentials",buttons:{ok:{type:"primary",text:"Close"}},message:"Please provide a valid combination of User and Password in order to successfully login into the system"}}).then(function(e){e.close.then(function(e){switch(e){case"ok":}})})}}).finally(function(){n.saving=!1,t.invasiveInvisible()})):void 0}}}]),angular.module("testClientGulp").controller("HelpCtrl",function(){"use strict"}),angular.module("testClientGulp").controller("ModalEmployeeCtrl",["$scope","$rootScope","employee","OfficeModel","loader","currentForm","close",function(e,t,s,o,l,i,a){"use strict";var r=this;r.model=s,r.title=s.id?"Edit Employee":"New Employee",r.on={close:function(e){a(e)},saveData:function(o){var n=s.id;if(!r.saving&&o)return r.saving=!0,l.invasiveVisible(),i.setFrm(e.employeeForm),s.$save().then(function(){t.$broadcast("$saved-employee",s,n),a("saved")}).finally(function(){r.saving=!1,l.invasiveInvisible()})},refreshOffices:function(t){var s={q:t,sort:"name",qf:"name"};return e.offices=o.query(s),e.offices.$promise}}}]),angular.module("testClientGulp").controller("EmployeesCtrl",["$scope","callServer","EmployeeModel","ModalService","$timeout","loader",function(e,t,s,o,l,i){"use strict";var a=this;e.$on("$saved-employee",function(e,t,s){if(s){var o=_.findIndex(a.smartTable.rowCollection,function(e){return e.id===t.id});-1!==o&&a.smartTable.rowCollection.splice(o,1,t)}else a.smartTable.rowCollection.splice(0,0,t);t.$isSelected=!0}),a.callServer=_.partial(t,{ctrl:a,Resource:s,qf:"firstName,lastName,initials"}),a.on={newOptsClick:function(){o.showModal({templateUrl:"/views/employees/employeeDlg.html",controller:"ModalEmployeeCtrl as ModalEmployee",inputs:{employee:new s}})},editOptsClick:function(e){var t=s.get({id:e.id});i.invasiveVisible(),t.$promise.then(function(){o.showModal({templateUrl:"/views/employees/employeeDlg.html",controller:"ModalEmployeeCtrl as ModalEmployee",inputs:{employee:t}})}).finally(function(){i.invasiveInvisible()})},deleteOptsClick:function(e){o.showModal({templateUrl:"/views/modalConfirm.html",controller:"ModalCtrl",inputs:{title:"Are you sure you want to delete employee?",buttons:{yes:{type:"primary",text:"Yes"},no:{type:"default",text:"No"}},message:"Once Deleted, you will not be able to recover it."}}).then(function(t){t.close.then(function(t){switch(t){case"yes":i.invasiveVisible(),e.$delete().then(function(){a.smartTable.api.slice(0,a.smartTable.resultsPerPage)}).finally(function(){i.invasiveInvisible()})}})})}}}]),angular.module("testClientGulp").service("socket",["config","security","ModalService","loader",function(e,t,s,o){"use strict";var l,i=this,a=!1;i.init=function(){l=io.connect(e.CAS_URL),l.on("connect",function(){l.emit("new_connection",{session:t.getSession()})}),l.on("login",function(){a||(a=!0,s.showModal({templateUrl:"/views/modalConfirm.html",controller:"ModalCtrl",inputs:{title:"Login Detected",buttons:{yes:{type:"primary",text:"Yes, refresh page now"},no:{type:"default",text:"No, I will refresh page manually later"}},message:"It seems you have logged into the Central Authorization Server.Do you want to refresh the page to be according your user rights?"}}).then(function(e){e.close.then(function(e){switch(e){case"yes":o.invasiveVisible(),window.location="/"}})}))}),l.on("logout",function(){window.location="/"})},i.emit=function(e){var s={session:t.getSession()};l.emit(e,s)}}]),angular.module("testClientGulp").service("security",["$http","errorService","config",function(){"use strict";var e=this,t=$security||{};e.setSecurityData=function(e){t=e},e.getSecurityData=function(){return t},e.getTicket=function(){return t&&t.ticket},e.getSession=function(){return t&&t.session}}]),angular.module("testClientGulp").provider("routing",["$stateProvider","$locationProvider","$urlRouterProvider","DEFAULT_STATE",function(e,t,s,o){"use strict";var l=this;l.routes={base:{name:"base","abstract":!0,controller:"BaseCtrl as Base",templateUrl:"/views/base.html"},login:{name:"base.login",url:"^/login",controller:"LoginCtrl as Login",templateUrl:"/views/login/login.html"},home:{name:"base.home","abstract":!0,controller:"HomeCtrl as Home",templateUrl:"/views/home.html"},help:{name:"base.home.help",url:"^/help",controller:"HelpCtrl as Help",templateUrl:"/views/help/help.html"},employees:{name:"base.home.employees",url:"^/employees",controller:"EmployeesCtrl as Employees",templateUrl:"/views/employees/employees.html",roles:["human_resources"]},offices:{name:"base.home.offices",url:"^/offices",controller:"OfficesCtrl as Offices",templateUrl:"/views/offices/offices.html",roles:["director"]}};for(var i in l.routes)l.routes.hasOwnProperty(i)&&e.state(l.routes[i]);s.otherwise(o),l.$get=["$state","loader","$rootScope","ModalService","security",function(e){function t(t,s,o){var i,a;if(!l.routes[t])throw new Error("Non existing route.");return i=e.href(e.current.name,e.$current.locals.globals.$stateParams),a=e.href(l.routes[t].name,s),i!==a?e.go(l.routes[t].name,s,o):void 0}return{routes:l.routes,go2State:t}}]}]),angular.module("testClientGulp").service("loader",function(){"use strict";var e=this,t=!1,s=!1;e.nonInvasiveVisible=function(){t=!0},e.nonInvasiveInvisible=function(){t=!1},e.getNonInvasiveVisible=function(){return t},e.invasiveVisible=function(){s=!0},e.invasiveInvisible=function(){s=!1},e.getInvasiveVisible=function(){return s}}),angular.module("testClientGulp").factory("httpInterceptor",["$q","$injector",function(e,t){"use strict";return{request:function(e){var s=t.get("security"),o=s.getTicket(),l=t.get("config");return(0===e.url.indexOf(l.API_URL)||0===e.url.indexOf(l.CAS_URL))&&(e.withCredentials=!0,o&&(e.headers.Authorization=o)),e},responseError:function(s){var o=t.get("errorService");switch(s.status){default:return s.config.doNotHandleErrors||o.showError(s),e.reject(s)}}}}]),angular.module("testClientGulp").service("errorService",["ModalService","loader","currentForm",function(e,t,s){"use strict";var o=this,l={0:"General Network Error. Please check your internet connection, API Server status and CAS Server status.",100:"CONTINUE",101:"SWITCHING_PROTOCOLS",200:"OK",201:"CREATED",202:"ACCEPTED",203:"NON-AUTHORITATIVE_INFORMATION",204:"NO_CONTENT",205:"RESET_CONTENT",206:"PARTIAL_CONTENT",300:"MULTIPLE_CHOICES",301:"MOVED_PERMANENTLY",302:"FOUND",303:"SEE_OTHER",304:"NOT_MODIFIED",305:"USE_PROXY",306:"(UNUSED)",307:"TEMPORARY_REDIRECT",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request Uri Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"Http Version Not Supported"};o.showError=function(o,i){var a,r,n="";if(400===o.status&&(a=s.getFrm(),r=s.getFieldTrans(),_.isObject(o.data))){if("VALIDATION_ERROR"===o.data.code&&_.isObject(o.data.errors)&&a){if(r=_.isObject(r)?r:{},_.each(_.keys(o.data.errors),function(e){_.each(_.keys(o.data.errors[e]),function(t){var s=function(){return!0};r[e]&&(e=r[e]),a[e]?(a[e].$setValidity(t,!1),a[e].$validators[t]||(a[e].$validators[t]=s)):n=n+" Validation "+t+" failed to field "+e})}),""===n)return;o.data.message=o.data.message?o.data.message:"",o.data.message=o.data.message+" "+n}"CONSTRAINT_ERROR"===o.data.code&&(o.data.message="Changes you are currently trying to do are restricted because of a database constraint. Most probably you are trying to delete data that is being used in another area of the System. More info: "+o.data.message)}if(401===o.status)return e.showModal({templateUrl:"/views/modalError.html",controller:"ModalCtrl",inputs:{title:"An error has occurred",buttons:{refresh:{type:"primary",text:"Refresh Page"},cancel:{type:"default",text:"Close"}},message:"It seems either your session has expired or you have been logged out of the Central Authorization Server."}}).then(function(e){e.close.then(function(e){switch(e){case"refresh":t.invasiveVisible(),window.location="/"}})});var c;if(_.isObject(o.data)&&o.data.message)c=o.data.message;else if(!_.isUndefined(o.status)){_.isObject(i)||(i={});var d=_.extend({},l,i);c=d[o.status]}c||(c="Unknown Error"),e.showModal({templateUrl:"/views/modalError.html",controller:"ModalCtrl",inputs:{title:"An error has occurred",buttons:{ok:{type:"primary",text:"Close"}},message:c}}).then(function(e){e.close.then(function(e){switch(e){case"ok":}})})}}]),angular.module("testClientGulp").factory("currentForm",function(){"use strict";var e,t;return{setFrm:function(t){e=t},getFrm:function(){return e},setFieldTrans:function(e){t=e},getFieldTrans:function(){return t}}}),angular.module("testClientGulp").factory("config",function(){"use strict";return $config}),angular.module("testClientGulp").factory("callServer",["config",function(e){"use strict";return function(t,s,o){var l=t.ctrl,i=t.Resource,a=t.qf,r=t.extraParams||{},n=t.resultsPerPage||e.RESULTS_PER_PAGE;s.pagination.number=n,s.pagination.start=s.pagination.start||0,l.smartTable=l.smartTable?l.smartTable:{},l.smartTable.isLoading=!0;var c=s.pagination,d=c.start||0,m=c.number||n,u={q:s.search.predicateObject&&s.search.predicateObject.$,offset:d,limit:m,qf:a};s.sort.predicate&&(u.sort=s.sort.predicate,s.sort.reverse&&(u.sort="-"+u.sort)),i.query(_.extend({},u,r),function(e,t){var i=t(),a=i["content-range"].split("/")[1];a=parseInt(a),l.smartTable.contentRange=i["content-range"],o.rowCollection=e,l.smartTable.rowCollection=e,l.smartTable.isLoading=!1,l.smartTable.api=o,l.smartTable.resultsPerPage=n,s.pagination.numberOfPages=Math.ceil(a/m),l.smartTable.rowCollection.length&&(l.smartTable.rowCollection[0].$isSelected=!0)}).$promise.catch(function(){l.smartTable.isLoading=!1,s.pagination.numberOfPages=0})}}]),angular.module("testClientGulp").factory("ProviderModel",["$resource","config",function(e,t){"use strict";return e(t.API_URL+"api/providers/:id",{id:"@id"})}]),angular.module("testClientGulp").factory("OfficeModel",["$resource","config",function(e,t){"use strict";return e(t.API_URL+"api/offices/:id",{id:"@id"})}]),angular.module("testClientGulp").factory("EmployeeModel",["$resource","config",function(e,t){"use strict";return e(t.API_URL+"api/employees/:id",{id:"@id"})}]),angular.module("testClientGulp").factory("ClientModel",["$resource","config",function(e,t){"use strict";return e(t.API_URL+"api/clients/:id",{id:"@id"})}]),angular.module("testClientGulp").filter("propsFilter",function(){"use strict";return function(e,t){var s=[];return angular.isArray(e)?e.forEach(function(e){for(var o=!1,l=Object.keys(t),i=0;i<l.length;i++){var a=l[i],r=t[a].toLowerCase();if(-1!==e[a].toString().toLowerCase().indexOf(r)){o=!0;break}}o&&s.push(e)}):s=e,s}}),angular.module("testClientGulp").directive("stSelectedRow",["stConfig",function(e){"use strict";return{restrict:"A",require:"^stTable",scope:{row:"=stSelectedRow"},link:function(t,s,o,l){function i(o){o===!0?(_.each(_.without(l.rowCollection,t.row),function(e){_.isUndefined(e.$isSelected)||(e.$isSelected=!1)}),s.addClass(e.select.selectedClass)):s.removeClass(e.select.selectedClass)}s.bind("click",function(){t.$apply(function(){t.row.$isSelected=!0})}),i(t.row.$isSelected),t.$watch("row.$isSelected",function(e){i(e)})}}}]),angular.module("testClientGulp").directive("msFocus",["$timeout",function(e){"use strict";return{restrict:"A",link:function(t,s,o){t.$watch(function(){return t.$eval(o.msFocus)},function(t){t===!0&&e(function(){s[0].focus()})})}}}]),angular.module("testClientGulp").directive("activeList",function(){"use strict";return{controller:["$scope","routing",function(e,t){e.click=function(e){t.go2State(e.state)},e.$on("$stateChangeSuccess",function(s,o){for(var l in t.routes)t.routes.hasOwnProperty(l)&&t.routes[l].name===o.name&&e.itemList.forEach(function(e){e.active=e.state===l})})}],replace:!0,template:'<ul class="{{ maincls }}"><li ng-repeat="item in itemList" ng-class="{active:item.active,standard:!item.active}"><a ng-click="click(item)"><i class="{{ item.iconCls }}" ng-if="item.iconCls"></i> <span ng-if="item.label">{{ item.label }}</span></a></li><img ng-if="imgSrc" class="pull-right" style="margin-right: 20px;margin-top: -3px;" height="55px" ng-src="{{imgSrc}}" alt=""/></ul>',restrict:"E",scope:{itemList:"=list",maincls:"=maincls",imgSrc:"=imgSrc"}}}),angular.module("testClientGulp").controller("ModalCtrl",["$scope","title","buttons","message","close",function(e,t,s,o,l){"use strict";e.title=t,e.message=o,e.buttons=[],_.each(_.keys(s),function(t){e.buttons.push(angular.extend({result:t},s[t]))}),e.close=function(e){l(e)}}]),angular.module("testClientGulp").controller("HomeCtrl",["$scope","$http","loader","ModalService","security","config","socket",function(e,t,s,o,l,i,a){"use strict";var r=this,n=l.getSecurityData().roles||[];r.security=l,r.CAS_URL=i.CAS_URL,r.list=[{state:"help",iconCls:"icon-question",label:"Help"}],_.intersection(["human_resources"],n).length&&r.list.push({state:"employees",iconCls:"icon-users",label:"Employees"}),_.intersection(["director"],n).length&&r.list.push({state:"offices",iconCls:"icon-library",label:"Offices"}),r.on={doLogout:function(){o.showModal({templateUrl:"/views/modalConfirm.html",controller:"ModalCtrl",inputs:{title:"Are you sure you want to logout?",buttons:{yes:{type:"primary",text:"Yes"},no:{type:"default",text:"No"}},message:"You will be logged out of the Central Authorization Server which means your session will be terminated in this and all other Applications linked to Authorization Server."}}).then(function(e){e.close.then(function(e){switch(e){case"yes":s.invasiveVisible(),t.get(i.CAS_URL+"/logout").then(function(){s.invasiveInvisible(),a.emit("logout"),window.location="/"})}})})}}}]),angular.module("testClientGulp").controller("BaseCtrl",["$scope","loader",function(e,t){"use strict";var s=this;s.loaderSvc=t}]),function(){"use strict";var e=angular.module("angularModalService",[]);e.factory("ModalService",["$document","$compile","$controller","$http","$rootScope","$q","$timeout","$templateCache",function(e,t,s,o,l,i,a,r){function n(){var e=this,n=[],d=100,m=function(e,t){var s=i.defer();if(e)s.resolve(e);else if(t){var l=r.get(t);void 0!==l?s.resolve(l):o({method:"GET",url:t,cache:!0}).then(function(e){r.put(t,e.data),s.resolve(e.data)}).catch(function(e){s.reject(e)})}else s.reject("No template or templateUrl has been specified.");return s.promise};e.closeAll=function(){_.each(n,function(e){e()})},e.showModal=function(e){var o=i.defer(),r=e.controller;return r?(m(e.template,e.templateUrl).then(function(m){var u=l.$new(),p=i.defer(),g=function(e,t){(void 0===t||null===t)&&(t=0),a(function(){p.resolve(e)},t)},v={$scope:u,close:g};if(n.push(g),d++,e.inputs)for(var h in e.inputs)v[h]=e.inputs[h];v.zIndex||(v.zIndex=d),u.zIndexStyle={"z-index":v.zIndex};var f=s(r,v),b=angular.element(m),y=t(b),w=y(u);u.modalElement=w,e.appendElement?e.appendElement.append(w):c.append(w);var C={controller:f,scope:u,element:w,close:p.promise};C.close.then(function(){u.$destroy(),w.remove(),n=_.without(n,g),d--}),o.resolve(C)}).catch(function(e){o.reject(e)}),o.promise):(o.reject("No controller has been specified."),o.promise)}}var c=e.find("body");return new n}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/base.html",'<div class="non-invasive-loader" ng-if="Base.loaderSvc.getNonInvasiveVisible()"></div><div class="invasive-loader" ng-if="Base.loaderSvc.getInvasiveVisible()"><i class="icon-spinner10"></i></div><div ui-view></div><div class="main-footer"><span class="main-footer-text pull-left">&copy; 2015 All Rights Reserved</span></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/errors.html",'<div class="error" ng-message="required"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="This field is mandatory, please fill it with proper information" class="label label-danger">Required</span></div><div class="error" ng-message="email"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="This field is an email, please fill it with proper information" class="label label-danger">Invalid email address</span></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/home.html",'<div class="main-header"><span class="user-photo"><img ng-src="{{Home.CAS_URL + Home.security.getSecurityData().image}}" alt=""></span> <span class="welcome">Welcome {{Home.security.getSecurityData().name}}</span> <i popover-trigger="mouseenter" popover="Logout" popover-placement="bottom" class="icon-cancel-circle" ng-click="Home.on.doLogout()"></i></div><active-list maincls="\'main-bar list-inline\'" list="Home.list" img-src="\'/assets/logo.png\'"></active-list><div ui-view></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/modalConfirm.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay modal-confirm animated zoomIn"><div class="row"><div class="col-xs-12"><i ng-click="close(\'cancel\')" class="icon-cross"></i></div></div><div class="row"><div class="col-xs-10 margin-title"><span class="title">{{title}}</span></div></div><div class="row message-margin"><div class="col-xs-12"><span class="message">{{message}}</span></div></div><div class="row toolbar"><div class="col-xs-12"><button ng-repeat="button in buttons" class="btn pull-right btn-{{button.type}}" ms-focus="$index == 0" ng-click="close(\'{{button.result}}\')" style="margin-left: 10px">{{ button.text }}</button></div></div></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/modalError.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay modal-error animated zoomIn"><div class="row"><div class="col-xs-12"><i ng-click="close(\'cancel\')" class="icon-cross"></i></div></div><div class="row"><div class="col-xs-12 margin-title"><span class="title-error">{{title}}</span></div></div><div class="row message-margin"><div class="col-xs-12"><div class="alert alert-danger">{{message}}</div></div></div><div class="row"><div class="col-xs-12"><button ng-repeat="button in buttons" class="btn pull-right btn-{{button.type}}" ms-focus="$index == 0" ng-click="close(\'{{button.result}}\')" style="margin-left: 10px">{{ button.text }}</button></div></div></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/clients/clientDlg.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay animated zoomIn modify-dialog"><div class="row"><div class="col-xs-10 main-title">{{ ModalClient.title}}</div><div class="col-xs-2"><i ng-click="ModalClient.on.close(\'cancel\')" class="icon-cross"></i></div></div><form name="clientForm" role="form" novalidate ng-submit="ModalClient.on.saveData(clientForm.$valid)"><div class="form-group" ng-class="{\'has-error\': ((clientForm.$submitted || clientForm.name.$touched) && clientForm.name.$invalid),\'has-success\':clientForm.name.$valid}"><div class="errors" ng-messages="clientForm.name.$error" ng-if="clientForm.$submitted || clientForm.name.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="name">Name</label><input ms-focus="true" class="form-control" id="name" name="name" placeholder="Please enter First Name" ng-model="ModalClient.model.name" required></div><div class="form-group" ng-class="{\'has-error\': ((clientForm.$submitted || clientForm.email.$touched) && clientForm.email.$invalid),\'has-success\':clientForm.email.$valid}"><div class="errors" ng-messages="clientForm.email.$error" ng-if="clientForm.$submitted || clientForm.email.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="email">Email</label><input type="email" class="form-control" id="email" name="email" placeholder="Please enter Last Name" ng-model="ModalClient.model.email" required></div><div class="form-group" ng-class="{\'has-error\': ((clientForm.$submitted || clientForm.phone.$touched) && clientForm.phone.$invalid),\'has-success\':clientForm.phone.$valid}"><div class="errors" ng-messages="clientForm.phone.$error" ng-if="clientForm.$submitted || clientForm.phone.$touched" ng-messages-include="/views/errors.html"><div class="error" ng-message="pattern"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="This field only allow numbers, please fill it with proper information" class="label label-danger">Only numbers allowed</span></div></div><label class="control-label" for="phone">Phone</label><input class="form-control" id="phone" name="phone" placeholder="Please enter Phone Number" pattern="^[0-9]*$" ng-model="ModalClient.model.phone" required></div><div class="form-group" ng-class="{\'has-error\': ((clientForm.$submitted || clientForm.Providers.$touched) && clientForm.Providers.$invalid),\'has-success\':clientForm.Providers.$valid}"><div class="errors" ng-messages="clientForm.Providers.$error" ng-if="clientForm.$submitted || clientForm.Providers.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="Providers">Providers</label><ui-select multiple id="Providers" name="Providers" ng-model="ModalClient.model.Providers" theme="bootstrap" close-on-select="false"><ui-select-match><div class="provider-item" popover="{{$item.address}}, Phone {{$item.phone}}" popover-trigger="mouseenter" popover-append-to-body="true"><i class="icon-truck"></i>{{$item.name}}, {{$item.descr}}</div></ui-select-match><ui-select-choices repeat="provider.id as provider in filteredProviders = (providers | propsFilter: {name: $select.search, descr: $select.search,address:$select.search, phone:$select.search} | orderBy: \'name\')"><div ng-bind-html="provider.name | highlight: $select.search"></div><small style="display:block">Description: <span ng-bind-html="\'\'+provider.descr | highlight: $select.search"></span></small> <small style="display:block">Phone: <span ng-bind-html="\'\'+provider.phone | highlight: $select.search"></span></small> <small style="display:block">Address: <span ng-bind-html="\'\'+provider.address | highlight: $select.search"></span></small></ui-select-choices></ui-select></div><div class="row toolbar"><div class="col-xs-12"><button type="submit" class="btn btn-primary pull-right">Save</button> <button type="button" class="btn btn-default pull-right" style="margin-right: 10px" ng-click="ModalClient.on.close(\'cancel\')">Cancel</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/clients/clientViewDlg.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay animated zoomIn client-view-dialog"><div class="row"><div class="col-xs-10 main-title">View Client</div><div class="col-xs-2"><i ng-click="ModalClientView.on.close(\'cancel\')" class="icon-cross"></i></div></div><form name="clientForm" role="form" novalidate><div class="row"><div class="col-xs-6"><div class="form-group"><label class="control-label" for="name">Name</label><input class="form-control" id="name" name="name" disabled ng-model="ModalClientView.model.name" required></div></div><div class="col-xs-6"><div class="form-group"><label class="control-label" for="email">Email</label><input class="form-control" id="email" name="email" disabled ng-model="ModalClientView.model.email" required></div></div></div><div class="row"><div class="col-xs-6"><div class="form-group"><label class="control-label" for="phone">Phone</label><input class="form-control" id="phone" name="phone" disabled ng-model="ModalClientView.model.phone" required></div></div></div><table class="table table-striped" st-pipe="ModalClientView.callServer" st-table="ModalClientView.smartTable.rowCollection"><thead><tr><th colspan="3"><span class="main-tab-title">Providers</span></th><th colspan="2"><div class="input-group search-ctrol"><input st-search placeholder="Search" class="input-sm form-control" ng-model="globalSearch" type="search"> <span class="input-group-addon"><i class="icon-search"></i></span></div></th></tr><tr><th width="23%"><span st-sort="name" class="col-header">Name</span></th><th width="23%"><span st-sort="descr" class="col-header">Description</span></th><th width="23%"><span st-sort="phone" class="col-header">Phone</span></th><th width="23%"><span st-sort="address" class="col-header">Address</span></th><th width="8%"></th></tr></thead><tbody ng-if="!ModalClientView.smartTable.isLoading"><tr ng-repeat="row in ModalClientView.smartTable.rowCollection"><td ng-bind-html="row.name | highlight: globalSearch"></td><td ng-bind-html="row.descr | highlight: globalSearch"></td><td ng-bind-html="row.phone | highlight: globalSearch"></td><td colspan="2" ng-bind-html="row.address | highlight: globalSearch"></td></tr><tr ng-if="!ModalClientView.smartTable.rowCollection.length"><td colspan="5" class="text-center"><span>No Providers found</span></td></tr></tbody><tbody ng-if="ModalClientView.smartTable.isLoading"><tr><td colspan="5"><i class="icon-spinner10 grid-loader"></i></td></tr></tbody><tfoot ng-if="!ModalClientView.smartTable.isLoading"><tr><td colspan="5"><div class="text-center" st-pagination="" st-items-by-page="ModalClientView.smartTable.resultsPerPage"></div><small ng-if="ModalClientView.smartTable.rowCollection.length" class="content-range text-center">{{ModalClientView.smartTable.contentRange}}</small></td></tr></tfoot></table><div class="row toolbar"><div class="col-xs-12"><button type="button" ms-focus="true" class="btn btn-primary pull-right" ng-click="ModalClientView.on.close(\'cancel\')">Close</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/clients/clients.html",'<div class="main-tab"><table class="table table-striped" st-pipe="Clients.callServer" st-table="Clients.smartTable.rowCollection"><thead><tr><th colspan="3"><span class="main-tab-title">Clients</span> <a class="add-btn" popover-trigger="mouseenter" popover="New Client" ng-click="Clients.on.newOptsClick()"><i class="icon-plus"></i></a></th><th colspan="2"><div class="input-group search-ctrol"><input st-search placeholder="Search" class="input-sm form-control" ng-model="globalSearch" type="search"> <span class="input-group-addon"><i class="icon-search"></i></span></div></th></tr><tr><th width="23%"><span st-sort="name" class="col-header">Name</span></th><th width="23%"></th><th width="23%"><span st-sort="email" class="col-header">Email</span></th><th width="23%"><span st-sort="phone" class="col-header">Phone</span></th><th width="8%"></th></tr></thead><tbody ng-if="!Clients.smartTable.isLoading"><tr ng-repeat="row in Clients.smartTable.rowCollection" st-selected-row="row"><td colspan="2" ng-bind-html="row.name | highlight: globalSearch"></td><td ng-bind-html="row.email | highlight: globalSearch"></td><td ng-bind-html="row.phone | highlight: globalSearch"></td><td><span class="dropdown" dropdown><i class="dropdown-toggle icon-menu3" dropdown-toggle></i><ul class="dropdown-menu grid-menu"><li><a href ng-click="Clients.on.editOptsClick(row)"><i class="icon-pencil"></i> <span>Edit</span></a></li><li><a href ng-click="Clients.on.deleteOptsClick(row)"><i class="icon-bin"></i> <span>Delete</span></a></li><li><a href ng-click="Clients.on.viewOptsClick(row)"><i class="icon-eye"></i> <span>View</span></a></li></ul></span></td></tr><tr ng-if="!Clients.smartTable.rowCollection.length"><td colspan="5" class="text-center"><span>No Clients found</span></td></tr></tbody><tbody ng-if="Clients.smartTable.isLoading"><tr><td colspan="5"><i class="icon-spinner10 grid-loader"></i></td></tr></tbody><tfoot ng-if="!Clients.smartTable.isLoading"><tr><td colspan="5"><div class="text-center" st-pagination="" st-items-by-page="Clients.smartTable.resultsPerPage"></div><small ng-if="Clients.smartTable.rowCollection.length" class="content-range text-center">{{Clients.smartTable.contentRange}}</small></td></tr></tfoot></table></div>')
}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/employees/employeeDlg.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay animated zoomIn modify-dialog"><div class="row"><div class="col-xs-10 main-title">{{ ModalEmployee.title}}</div><div class="col-xs-2"><i ng-click="ModalEmployee.on.close(\'cancel\')" class="icon-cross"></i></div></div><form name="employeeForm" role="form" novalidate ng-submit="ModalEmployee.on.saveData(employeeForm.$valid)"><div class="form-group" ng-class="{\'has-error\': ((employeeForm.$submitted || employeeForm.firstName.$touched) && employeeForm.firstName.$invalid),\'has-success\':employeeForm.firstName.$valid}"><div class="errors" ng-messages="employeeForm.firstName.$error" ng-if="employeeForm.$submitted || employeeForm.firstName.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="firstName">First Name</label><input ms-focus="true" class="form-control" id="firstName" name="firstName" placeholder="Please enter First Name" ng-model="ModalEmployee.model.firstName" required></div><div class="form-group" ng-class="{\'has-error\': ((employeeForm.$submitted || employeeForm.lastName.$touched) && employeeForm.lastName.$invalid),\'has-success\':employeeForm.lastName.$valid}"><div class="errors" ng-messages="employeeForm.lastName.$error" ng-if="employeeForm.$submitted || employeeForm.lastName.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="lastName">Last Name</label><input class="form-control" id="lastName" name="lastName" placeholder="Please enter Last Name" ng-model="ModalEmployee.model.lastName" required></div><div class="form-group" ng-class="{\'has-error\': ((employeeForm.$submitted || employeeForm.initials.$touched) && employeeForm.initials.$invalid),\'has-success\':employeeForm.initials.$valid}"><div class="errors" ng-messages="employeeForm.initials.$error" ng-if="employeeForm.$submitted || employeeForm.initials.$touched" ng-messages-include="/views/errors.html"><div class="error" ng-message="pattern"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="This field allows only uppercase letters, no spaces, please fill it with proper information" class="label label-danger">Only uppercase letters allowed (No spaces)</span></div></div><label class="control-label" for="initials">Initials</label><input class="form-control" id="initials" name="initials" placeholder="Please enter Initials" pattern="^[A-Z]*$" ng-model="ModalEmployee.model.initials" required></div><div class="form-group" ng-class="{\'has-error\': ((employeeForm.$submitted || employeeForm.officeId.$touched) && employeeForm.officeId.$invalid),\'has-success\':employeeForm.officeId.$valid}"><div class="errors" ng-messages="employeeForm.officeId.$error" ng-if="employeeForm.$submitted || employeeForm.officeId.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="officeId">Office</label><ui-select id="officeId" name="officeId" required ng-model="ModalEmployee.model.officeId" theme="bootstrap" reset-search-input="false"><ui-select-match placeholder="Search Offices"><i class="icon-cross" ng-click="$event.stopPropagation();ModalEmployee.model.officeId = undefined;"></i> <span>{{$select.selected.name}}</span></ui-select-match><ui-select-choices repeat="office.id as office in offices" refresh="ModalEmployee.on.refreshOffices($select.search)" refresh-delay="0"><div ng-bind-html="office.name | highlight: $select.search"></div></ui-select-choices></ui-select></div><div class="row toolbar"><div class="col-xs-12"><button type="submit" class="btn btn-primary pull-right">Save</button> <button type="button" class="btn btn-default pull-right" style="margin-right: 10px" ng-click="ModalEmployee.on.close(\'cancel\')">Cancel</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/employees/employees.html",'<div class="main-tab"><table class="table table-striped" st-pipe="Employees.callServer" st-table="Employees.smartTable.rowCollection"><thead><tr><th colspan="3"><span class="main-tab-title">Employees</span> <a class="add-btn" popover-trigger="mouseenter" popover="New Employee" ng-click="Employees.on.newOptsClick()"><i class="icon-plus"></i></a></th><th colspan="2"><div class="input-group search-ctrol"><input st-search placeholder="Search" class="input-sm form-control" ng-model="globalSearch" type="search"> <span class="input-group-addon"><i class="icon-search"></i></span></div></th></tr><tr><th width="23%"><span st-sort="firstName" class="col-header">First Name</span></th><th width="23%"><span st-sort="lastName" class="col-header">Last Name</span></th><th width="23%"><span st-sort="initials" class="col-header">Initials</span></th><th width="23%"><span>Office</span></th><th width="8%"></th></tr></thead><tbody ng-if="!Employees.smartTable.isLoading"><tr ng-repeat="row in Employees.smartTable.rowCollection" st-selected-row="row"><td ng-bind-html="row.firstName | highlight: globalSearch"></td><td ng-bind-html="row.lastName | highlight: globalSearch"></td><td ng-bind-html="row.initials | highlight: globalSearch"></td><td ng-bind-html="row.Office.name | highlight: globalSearch"></td><td><span class="dropdown" dropdown><i class="dropdown-toggle icon-menu3" dropdown-toggle></i><ul class="dropdown-menu grid-menu"><li><a href ng-click="Employees.on.editOptsClick(row)"><i class="icon-pencil"></i> <span>Edit</span></a></li><li><a href ng-click="Employees.on.deleteOptsClick(row)"><i class="icon-bin"></i> <span>Delete</span></a></li></ul></span></td></tr><tr ng-if="!Employees.smartTable.rowCollection.length"><td colspan="5" class="text-center"><span>No Employees found</span></td></tr></tbody><tbody ng-if="Employees.smartTable.isLoading"><tr><td colspan="5"><i class="icon-spinner10 grid-loader"></i></td></tr></tbody><tfoot ng-if="!Employees.smartTable.isLoading"><tr><td colspan="5"><div class="text-center" st-pagination="" st-items-by-page="Employees.smartTable.resultsPerPage"></div><small ng-if="Employees.smartTable.rowCollection.length" class="content-range text-center">{{Employees.smartTable.contentRange}}</small></td></tr></tfoot></table></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/help/help.html",'<div class="help-tab"><div class="row"><div class="col-xs-12"><span class="help-tab-title">Help</span></div></div><div class="container"><p>This application has two main functionalities, Employees and Offices. Users having <code>"human_resources"</code> role can access Employees and Users having <code>"director"</code> role can access Offices. Here are all posible users and their passwords and roles.</p></div><div class="col-xs-12"><pre class="prettyprint">\n        [\n          \'nestor.urquiza@gmail.com\': {\n              password: \'nestor\',\n'+"              roles: ['director', 'human_resources']\n          },\n          'lgutierrezvalencia@krfs.com': {\n              password: 'lilia',\n              roles: ['director', 'human_resources', 'manager']\n          },\n          'wmedina@krfs.com': {\n              password: 'williams',\n              roles: ['director', 'human_resources', 'manager']\n          },\n          'damianbh@gmail.com': {\n              password: 'damianbh',\n              roles: ['human_resources', 'manager']\n          },\n          'alejandro@gmail.com': {\n              password: 'alejandro',\n              roles: ['director', 'manager']\n          }\n        ]\n      </pre></div></div>")}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/login/login.html",'<div class="login-page"><div class="row margin-top"><div class="col-xs-9 col-xs-offset-3 title"><h2>Please enter your Credentials</h2></div></div><div class="row margin"><div class="col-xs-3"><span class="lock"><i class="icon-lock"></i></span></div><div class="col-xs-6"><form name="loginForm" role="form" novalidate ng-submit="Login.on.doLogin(loginForm.$valid)"><div class="form-group" ng-class="{\'has-error\': ((loginForm.$submitted || loginForm.name.$touched) && loginForm.name.$invalid),\'has-success\':loginForm.name.$valid}"><div class="errors" ng-messages="loginForm.name.$error" ng-if="loginForm.$submitted || loginForm.name.$touched" ng-messages-include="/views/errors.html"><div class="error" ng-message="invalid-credentials"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="Please, enter a valid User/Password combination" class="label label-danger">Invalid Credentials</span></div></div><label class="control-label" for="name">User</label><div class="input-group"><input ms-focus="true" class="form-control" id="name" name="name" placeholder="Please enter User Name" ng-model="Login.model.name" required> <span class="input-group-addon"><i class="icon-user"></i></span></div></div><div class="form-group" ng-class="{\'has-error\': ((loginForm.$submitted || loginForm.password.$touched) && loginForm.password.$invalid),\'has-success\':loginForm.password.$valid}"><div class="errors" ng-messages="loginForm.password.$error" ng-if="loginForm.$submitted || loginForm.password.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="password">Password</label><div class="input-group"><input type="password" class="form-control" id="password" name="password" placeholder="Please enter Password" ng-model="Login.model.password" required> <span class="input-group-addon"><i class="icon-key"></i></span></div></div><div class="row toolbar"><div class="col-xs-12"><button type="submit" class="btn btn-primary pull-right">Login</button></div></div></form></div></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/offices/officeDlg.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay animated zoomIn modify-dialog"><div class="row"><div class="col-xs-10 main-title">{{ ModalOffice.title}}</div><div class="col-xs-2"><i ng-click="ModalOffice.on.close(\'cancel\')" class="icon-cross"></i></div></div><form name="officeForm" role="form" novalidate ng-submit="ModalOffice.on.saveData(officeForm.$valid)"><div class="form-group" ng-class="{\'has-error\': ((officeForm.$submitted || officeForm.name.$touched) && officeForm.name.$invalid),\'has-success\':officeForm.name.$valid}"><div class="errors" ng-messages="officeForm.name.$error" ng-if="officeForm.$submitted || officeForm.name.$touched" ng-messages-include="/views/errors.html"><div class="error" ng-message="name_must_be_unique"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="Office name already exists. Please provide an Office name that\'s not already registered" class="label label-danger">Office name must be unique</span></div></div><label class="control-label" for="name">Name</label><input ms-focus="true" class="form-control" id="name" name="name" placeholder="Please enter Office Name" ng-model="ModalOffice.model.name" required></div><div class="row toolbar"><div class="col-xs-12"><button type="submit" class="btn btn-primary pull-right">Save</button> <button type="button" class="btn btn-default pull-right" style="margin-right: 10px" ng-click="ModalOffice.on.close(\'cancel\')">Cancel</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/offices/offices.html",'<div class="main-tab"><table class="table table-striped" st-pipe="Offices.callServer" st-table="Offices.smartTable.rowCollection"><thead><tr><th colspan="3"><span class="main-tab-title">Offices</span> <a class="add-btn" popover-trigger="mouseenter" popover="New Office" ng-click="Offices.on.newOptsClick()"><i class="icon-plus"></i></a></th><th colspan="2"><div class="input-group search-ctrol"><input st-search placeholder="Search" class="input-sm form-control" ng-model="globalSearch" type="search"> <span class="input-group-addon"><i class="icon-search"></i></span></div></th></tr><tr><th width="23%"><span st-sort="id" class="col-header">Id</span></th><th width="23%"><span st-sort="name" class="col-header">Name</span></th><th width="23%"></th><th width="23%"></th><th width="8%"></th></tr></thead><tbody ng-if="!Offices.smartTable.isLoading"><tr ng-repeat="row in Offices.smartTable.rowCollection" st-selected-row="row"><td>{{row.id}}</td><td colspan="3" ng-bind-html="row.name | highlight: globalSearch"></td><td><span class="dropdown" dropdown><i class="dropdown-toggle icon-menu3" dropdown-toggle></i><ul class="dropdown-menu grid-menu"><li><a href ng-click="Offices.on.editOptsClick(row)"><i class="icon-pencil"></i> <span>Edit</span></a></li><li><a href ng-click="Offices.on.deleteOptsClick(row)"><i class="icon-bin"></i> <span>Delete</span></a></li></ul></span></td></tr><tr ng-if="!Offices.smartTable.rowCollection.length"><td colspan="5" class="text-center"><span>No Offices found</span></td></tr></tbody><tbody ng-if="Offices.smartTable.isLoading"><tr><td colspan="5"><i class="icon-spinner10 grid-loader"></i></td></tr></tbody><tfoot ng-if="!Offices.smartTable.isLoading"><tr><td colspan="5"><div class="text-center" st-pagination="" st-items-by-page="Offices.smartTable.resultsPerPage"></div><small ng-if="Offices.smartTable.rowCollection.length" class="content-range text-center">{{Offices.smartTable.contentRange}}</small></td></tr></tfoot></table></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/providers/providerDlg.html",'<div class="modal-fade" ng-style="zIndexStyle"><div class="modal-overlay animated zoomIn modify-dialog"><div class="row"><div class="col-xs-10 main-title">{{ ModalProvider.title}}</div><div class="col-xs-2"><i ng-click="ModalProvider.on.close(\'cancel\')" class="icon-cross"></i></div></div><form name="providerForm" role="form" novalidate ng-submit="ModalProvider.on.saveData(providerForm.$valid)"><div class="form-group" ng-class="{\'has-error\': ((providerForm.$submitted || providerForm.name.$touched) && providerForm.name.$invalid),\'has-success\':providerForm.name.$valid}"><div class="errors" ng-messages="providerForm.name.$error" ng-if="providerForm.$submitted || providerForm.name.$touched" ng-messages-include="/views/errors.html"><div class="error" ng-message="name_must_be_unique"><span popover-append-to-body="true" popover-trigger="mouseenter" popover="Provider name already exists. Please provide a Provider name that\'s not already registered" class="label label-danger">Provider name must be unique</span></div></div><label class="control-label" for="name">Name</label><input ms-focus="true" class="form-control" id="name" name="name" placeholder="Please enter Provider Name" ng-model="ModalProvider.model.name" required></div><div class="form-group" ng-class="{\'has-error\': ((providerForm.$submitted || providerForm.descr.$touched) && providerForm.descr.$invalid),\'has-success\':providerForm.descr.$valid}"><div class="errors" ng-messages="providerForm.descr.$error" ng-if="providerForm.$submitted || providerForm.descr.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="descr">Description</label><input class="form-control" id="descr" name="descr" placeholder="Please enter Provider Description" ng-model="ModalProvider.model.descr" required></div><div class="form-group" ng-class="{\'has-error\': ((providerForm.$submitted || providerForm.phone.$touched) && providerForm.phone.$invalid),\'has-success\':providerForm.phone.$valid}"><div class="errors" ng-messages="providerForm.phone.$error" ng-if="providerForm.$submitted || providerForm.phone.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="phone">Phone</label><input class="form-control" id="phone" name="phone" placeholder="Please enter Provider Phone" ng-model="ModalProvider.model.phone" required></div><div class="form-group" ng-class="{\'has-error\': ((providerForm.$submitted || providerForm.address.$touched) && providerForm.address.$invalid),\'has-success\':providerForm.address.$valid}"><div class="errors" ng-messages="providerForm.address.$error" ng-if="providerForm.$submitted || providerForm.address.$touched" ng-messages-include="/views/errors.html"></div><label class="control-label" for="address">Address</label><input class="form-control" id="address" name="address" placeholder="Please enter Provider Address" ng-model="ModalProvider.model.address" required></div><div class="row toolbar"><div class="col-xs-12"><button type="submit" class="btn btn-primary pull-right">Save</button> <button type="button" class="btn btn-default pull-right" style="margin-right: 10px" ng-click="ModalProvider.on.close(\'cancel\')">Cancel</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("testClientGulp")}catch(t){e=angular.module("testClientGulp",[])}e.run(["$templateCache",function(e){e.put("/views/providers/providers.html",'<div class="main-tab"><table class="table table-striped" st-pipe="Providers.callServer" st-table="Providers.smartTable.rowCollection"><thead><tr><th colspan="3"><span class="main-tab-title">Providers</span> <a class="add-btn" popover-trigger="mouseenter" popover="New Provider" ng-click="Providers.on.newOptsClick()"><i class="icon-plus"></i></a></th><th colspan="2"><div class="input-group search-ctrol"><input st-search placeholder="Search" class="input-sm form-control" ng-model="globalSearch" type="search"> <span class="input-group-addon"><i class="icon-search"></i></span></div></th></tr><tr><th width="23%"><span st-sort="name" class="col-header">Name</span></th><th width="23%"><span st-sort="descr" class="col-header">Description</span></th><th width="23%"><span st-sort="phone" class="col-header">Phone</span></th><th width="23%"><span st-sort="address" class="col-header">Address</span></th><th width="8%"></th></tr></thead><tbody ng-if="!Providers.smartTable.isLoading"><tr ng-repeat="row in Providers.smartTable.rowCollection" st-selected-row="row"><td ng-bind-html="row.name | highlight: globalSearch"></td><td ng-bind-html="row.descr | highlight: globalSearch"></td><td ng-bind-html="row.phone | highlight: globalSearch"></td><td ng-bind-html="row.address | highlight: globalSearch"></td><td><span class="dropdown" dropdown><i class="dropdown-toggle icon-menu3" dropdown-toggle></i><ul class="dropdown-menu grid-menu"><li><a href ng-click="Providers.on.editOptsClick(row)"><i class="icon-pencil"></i> <span>Edit</span></a></li><li><a href ng-click="Providers.on.deleteOptsClick(row)"><i class="icon-bin"></i> <span>Delete</span></a></li></ul></span></td></tr><tr ng-if="!Providers.smartTable.rowCollection.length"><td colspan="5" class="text-center"><span>No Providers found</span></td></tr></tbody><tbody ng-if="Providers.smartTable.isLoading"><tr><td colspan="5"><i class="icon-spinner10 grid-loader"></i></td></tr></tbody><tfoot ng-if="!Providers.smartTable.isLoading"><tr><td colspan="5"><div class="text-center" st-pagination="" st-items-by-page="Providers.smartTable.resultsPerPage"></div><small ng-if="Providers.smartTable.rowCollection.length" class="content-range text-center">{{Providers.smartTable.contentRange}}</small></td></tr></tfoot></table></div>')}])}();